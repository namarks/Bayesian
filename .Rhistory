#Define grid
p_grid <- seq(from=0,to=1, length.out = 1000)
#define prior
prior <- rep(1,1000)
#compute likelihood at each value in grid
likelihood <- dbinom(6, size=9, prob=p_grid)
#compute product of likelihood and prior
unstd.posterior <- likelihood * prior
#standardize the posterior, so it sums to 1
posterior <- unstd.posterior / sum(unstd.posterior)
#sample posterior
sample <- sample(p_grid, prob = posterior, size = 10000, replace=TRUE)
dens(sample)
plot(sample)
#probabilty world water proportion is less than 50%
sum(posterior[p_grid < .5])
sum(sample < .5) / 10000
p_grid <- seq(from=0,to=1,length.out = 1000)
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
1e4
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
posterior <- likelihood*prior
posterior <- posterior/sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob=posterior, size=10000, replace=TRUE)
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
posterior <- likelihood*prior
posterior <- posterior/sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob=posterior, size=10000, replace=TRUE)
#Test
?pbinom
plot(samples)
plot(posterior)
sum(posterior[p_grid < .2])
sum(posterior[p_grid < .8])
sum(posterior[p_grid < .2])
sum(posterior[p_grid < .8])
sum(posterior[p_grid < .2])
sum(posterior[p_grid < .8])
sum(posterior[p_grid < .8 & p_grid > .2])
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
posterior <- likelihood*prior
posterior <- posterior/sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob=posterior, size=10000, replace=TRUE)
sum(posterior[p_grid < .2])
sum(posterior[p_grid < .8])
sum(posterior[p_grid < .8 & p_grid > .2])
sum(posterior[p_grid < .2])
sum(samples < 0.2) / 1e4
sum(posterior[p_grid < .8])
sum(samples < 0.8) / 1e4
sum(posterior[p_grid < .8 & p_grid > .2])
sum(samples > 0.2 & samples > 0.8) / 1e4
sum(posterior[p_grid < .2])
sum(samples < 0.2) / 1e4
sum(posterior[p_grid < .8])
sum(samples < 0.8) / 1e4
sum(posterior[p_grid < .8 & p_grid > .2])
sum(samples > 0.2 & samples < 0.8) / 1e4
quantile(samples, .2)
quantile(samples, .2)
quantile(samples, .8) - quantile(samples, .2)
HPDI(samples, prob = .2)
?PI
quantile(samples, .2)
quantile(samples, .8) - quantile(samples, .2)
HPDI(samples, prob = .66)
PI(samples, prob = .66
quantile(samples, .2)
quantile(samples, .8) - quantile(samples, .2)
HPDI(samples, prob = .66)
PI(samples, prob = .66)
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(8, size=15, prob=p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
samples <- sample(p_grid, prob=posterior, size = 1e4, replace=TRUE)
HPDI(samples, p=.9)
head(samples)
nrow(samples)
samples
w <- rbinom(1e4, size=8, prob=samples)
plot(w)
w
?rbinom
samples
posterior
head(posterior)
w <- rbinom(1e4, size=8, prob=samples)
w2 <- w / sum(w)
plot(w2)
hist(w)
hist(2)
hist(w)
hist(w2)
hist(samples)
w <- rbinom(1e4, size=8, prob=samples)
simplehist(w)
w <- rbinom(1e4, size=15, prob=samples)
simplehist(w)
?dbinom
birth1
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
# data(homeworkch2)
data(homeworkch3)
hist(birth1)
hist(birth2)
p_grid <- seq(0,1,1e4)
p_grid
p_grid <- seq(0,1,legth.out=1e4)
p_grid <- seq(0,1,length.out=1e4)
p_grid
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
posterior
hist(posterior)
?sample
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
simplehist(samples)
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
samples <- sample(p_grid, prob = posterior, size = 1e4, replace = TRUE)
simplehist(samples)
hist(posterior)
p_grid
prior
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 1e4, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
hist(posterior)
simplehist(posterior)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
hist(posterior)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
hist(posterior)
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
posterior <- likelihood*prior
posterior <- posterior/sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob=posterior, size=10000, replace=TRUE)
p_grid <- seq(from=0,to=1,length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p_grid)
posterior <- likelihood*prior
posterior <- posterior/sum(posterior)
set.seed(100)
samples <- sample(p_grid, prob=posterior, size=10000, replace=TRUE)
hist(posterior)
hist(samples)
births <- data_frame(boy = c(birth1, birth2),
birth_order = c(rep(1, length(birth1)),
rep(2, length(birth2))
)
)
sample_size = 10000
model <- data_frame(p_grid = seq(from = 0, to = 1, length.out = sample_size),
prior = rep(1, sample_size))
set.seed(20170428)
model %<>%
mutate(likelihood = dbinom(sum(births$boy), nrow(births), prob = p_grid),
posterior = prior * likelihood / sum(prior * likelihood))
ggplot(model, aes(x = p_grid, y=posterior)) +
geom_point(size = 0.1, color = "blue")
library(tidyverse)
births <- data_frame(boy = c(birth1, birth2),
birth_order = c(rep(1, length(birth1)),
rep(2, length(birth2))
)
)
sample_size = 10000
model <- data_frame(p_grid = seq(from = 0, to = 1, length.out = sample_size),
prior = rep(1, sample_size))
set.seed(20170428)
model %<>%
mutate(likelihood = dbinom(sum(births$boy), nrow(births), prob = p_grid),
posterior = prior * likelihood / sum(prior * likelihood))
ggplot(model, aes(x = p_grid, y=posterior)) +
geom_point(size = 0.1, color = "blue")
births <- data_frame(boy = c(birth1, birth2),
birth_order = c(rep(1, length(birth1)),
rep(2, length(birth2))
)
)
sample_size = 10000
model <- data_frame(p_grid = seq(from = 0, to = 1, length.out = sample_size),
prior = rep(1, sample_size))
model
set.seed(20170428)
model %<>%
mutate(likelihood = dbinom(sum(births$boy), nrow(births), prob = p_grid),
posterior = prior * likelihood / sum(prior * likelihood))
library(tidyverse)
births <- data_frame(boy = c(birth1, birth2),
birth_order = c(rep(1, length(birth1)),
rep(2, length(birth2))
)
)
sample_size = 10000
model <- data_frame(p_grid = seq(from = 0, to = 1, length.out = sample_size),
prior = rep(1, sample_size))
set.seed(20170428)
model <- model %>%
mutate(likelihood = dbinom(sum(births$boy), nrow(births), prob = p_grid),
posterior = prior * likelihood / sum(prior * likelihood))
ggplot(model, aes(x = p_grid, y=posterior)) +
geom_point(size = 0.1, color = "blue")
plot(p_gird, posterior)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
plot(p_grid, posterior)
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,1e4)
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
plot(p_grid, posterior)
plot(p_grid, posterior)
p_grid <- seq(0,1,length.out=1e4)
prior <- rep(1,length(p_grid))
likelihood <- dbinom(boy_births, size = 200, prob = p_grid)
posterior <- prior*likelihood
posterior <- posterior / sum(posterior)
plot(p_grid, posterior)
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
births <- data_frame(boy = c(birth1, birth2)
, birth_order = c(rep(1,length(birth1))
, rep(2,lenght(birth2))))
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
births <- data_frame(boy = c(birth1, birth2)
, birth_order = c(rep(1,length(birth1))
, rep(2,length(birth2))))
head(births)
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
births <- data_frame(boy = c(birth1, birth2)
, birth_order = c(rep(1,length(birth1))
, rep(2,length(birth2))))
sample_size <- 10000
data(homeworkch3)
boy_births <- sum(birth1) + sum(birth2)
births <- data_frame(boy = c(birth1, birth2)
, birth_order = c(rep(1,length(birth1))
, rep(2,length(birth2))))
sample_size <- 10000
model <- data_frame(p_grid = seq(0,1,length.out=sample_size)
, prior = rep(1, sample_size))
model <- model %>%
mutate(likelihood = dbinom(sum(births$boy), size = nrow(births), prob = p_grid)
, posterior = prior*likelihood / sum(prior*likelihood))
sample_size <- 10000
model <- data_frame(p_grid = seq(0,1,length.out=sample_size)
, prior = rep(1, sample_size))
model <- model %>%
mutate(likelihood = dbinom(sum(births$boy), size = nrow(births), prob = p_grid)
, posterior = prior*likelihood / sum(prior*likelihood))
ggplot(model, aes(p_grid, posterior)) +
geom_line()
?options
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
options(scipen = 9)
# data(homeworkch2)
sample_size <- 10000
model <- data_frame(p_grid = seq(0,1,length.out=sample_size)
, prior = rep(1, sample_size))
model <- model %>%
mutate(likelihood = dbinom(sum(births$boy), size = nrow(births), prob = p_grid)
, posterior = prior*likelihood / sum(prior*likelihood))
ggplot(model, aes(p_grid, posterior)) +
geom_line()
sample_size <- 10000
model <- data_frame(p_grid = seq(0,1,length.out=sample_size)
, prior = rep(1, sample_size))
model <- model %>%
mutate(likelihood = dbinom(sum(births$boy), size = nrow(births), prob = p_grid)
, posterior = prior*likelihood / sum(prior*likelihood))
ggplot(model, aes(p_grid, posterior)) +
geom_line()
p_grid[which.max(posterior)]
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
head(model)
head(model, 20)
plot(model$sample_grid)
hist(model$sample_grid)
samples_hdpi <- HDPI(model$sample_grid, prob = c(.5,.89,.97))
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.89,.97))
samples_hpdi
ggplot(model, aes(sample_grid)) + geom_density()
?data_frame
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("rmcelreath/rethinking")
library(rethinking)
library(tidyverse)
options(scipen = 9)
# data(homeworkch2)
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.89,.97))
sample_hdpi
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.89,.97))
samples_hpdi
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$samples_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$samples_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$samples_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$sample_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$sample_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$sample_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
ggplot(model, aes(sample_grid, fill = sample_cat)) +
geom_bar(stat = "identity")
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$sample_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$sample_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$sample_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
ggplot(model, aes('test', sample_grid, fill = sample_cat)) +
geom_bar(stat = "identity")
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$sample_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$sample_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$sample_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
ggplot(model, aes(p_grid, sample_grid, fill = sample_cat)) +
geom_bar(stat = "identity")
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$sample_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$sample_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$sample_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
ggplot(model, aes(sample_grid, fill = sample_cat)) +
geom_histogram(bins = 1000)
model <- model %>%
mutate(sample_grid = sample(p_grid, size = sample_size, replace = TRUE, prob = posterior))
samples_hpdi <- HPDI(model$sample_grid, prob = c(.5,.90,.95))
samples_hpdi
model <- model %>%
mutate(sample_cat = case_when(.$sample_grid >= samples_hpdi[3] & .$sample_grid <= samples_hpdi[4] ~ '50%'
, .$sample_grid >= samples_hpdi[2] & .$sample_grid <= samples_hpdi[5] ~ '90%'
, .$sample_grid >= samples_hpdi[1] & .$sample_grid <= samples_hpdi[6] ~ '95%'
, TRUE ~ 'Outside'))
ggplot(model, aes(sample_grid, fill = sample_cat)) +
geom_histogram(bins = 1000) +
scale_x_continuous(limits = c(0,1))
names(model)
?dbinom
names(births)
head(births)
?mle2
mle
?mle
?mle2
library(rethinking)
mle2
?mle2
pr.boy
list(boys = sum(births$boy))
nrow(births)
?mle
set.seed(20170428)
boys_qa <- rethinking::map(
alist(
boys ~ dbinom(size=nrow(births),prob = pr.boy) ,  # binomial likelihood
pr.boy <- dunif(0,1)    # uniform prior
), data=list(boys = sum(births$boy)) )
boys_qa
boys_qa@formula
boys_qa@formula[[1]]
boys_qa@formula_parsed
boys_qa@optim
?rethinking::map
?rethinking::map
help(rethinking)
library(rethinking)
help(rethinking)
install.packages(c("mvtnorm","loo","coda"), repos="https://cloud.r-project.org/",dependencies=TRUE)
options(repos=c(getOption('repos'), rethinking='http://xcelab.net/R'))
install.packages('rethinking',type='source')
install.packages(c("mvtnorm", "loo", "coda"), repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages(c("mvtnorm", "loo", "coda"), repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages(c("mvtnorm", "loo", "coda"), repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("rstan")
ls()
library(rstan)
getwd()
library(rstan)
setwd(paste(getwd(),"bayesian multilevel learning",sep = '/'))
getwd()
schools_data <- list(
J = 8, #
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18)
)
fit1 <- stan(
file = "schools.stan",  # Stan program
data = schools_data,    # named list of data
chains = 4,             # number of Markov chains
warmup = 1000,          # number of warmup iterations per chain
iter = 2000,            # total number of iterations per chain
cores = 2,              # number of cores (using 2 just for the vignette)
refresh = 1000          # show progress every 'refresh' iterations
)
getwd()
schools_data <- list(
J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18)
)
test <- read.table(file.path(getwd(),"schools.stan"))
file.path(getwd(),"schools.stan")
rstan::read_stan_csv(file.path(getwd(),"schools.stan"))
library(rstan)
setwd(paste(getwd(),"bayesian multilevel learning",sep = '/'))
# Data --------------------------------------------------------------------
schools_data <- list(
J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18)
)
# Fit ---------------------------------------------------------------------
fit1 <- stan(
file = "schools.stan",  # Stan program
data = schools_data,    # named list of data
chains = 4,             # number of Markov chains
warmup = 1000,          # number of warmup iterations per chain
iter = 2000,            # total number of iterations per chain
cores = 2,              # number of cores (using 2 just for the vignette)
refresh = 1000          # show progress every 'refresh' iterations
)
pairs()
pairs(fit1)
